{"version":3,"sources":["Components/Tour.tsx","Components/Tours.tsx","App.tsx","index.tsx"],"names":["Tour","id","name","info","image","price","remove","useState","isShown","setIsShown","className","src","alt","substring","onClick","Tours","tours","map","tour","App","data","setData","setIsLoading","setIsError","getData","url","a","axios","get","response","console","log","JSON","stringify","dataJson","parse","parsed","useEffect","newData","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"69HAOaA,EAAqB,SAAC,GAO5B,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,MACAC,EACI,EADJA,OAEA,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,OACE,0BAASC,UAAU,cAAnB,UACE,qBAAKC,IAAKP,EAAOQ,IAAKV,IACtB,mCACE,sBAAKQ,UAAU,YAAf,UACE,6BAAKR,IACL,oBAAIQ,UAAU,aAAd,SAA4BL,OAE9B,4BAAIG,EAAUL,EAAOA,EAAKU,UAAU,EAAG,KAAO,QAC9C,qBAAKH,UAAU,SAAf,SACE,wBAAQI,QAAS,kBAAML,GAAYD,IAAnC,SACGA,EACC,cAAC,IAAD,CAAwBE,UAAU,cAElC,cAAC,IAAD,CAA0BA,UAAU,kBAI1C,wBACEA,UAAU,aACVI,QAAS,WACPR,EAAOL,IAHX,mCCjBKc,EAAuB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOV,EAAa,EAAbA,OAC5C,OACE,oCACE,sBAAKI,UAAU,QAAf,UACE,2CACA,qBAAKA,UAAU,iBAEjB,8BACGM,EAAMC,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,2BAAwBA,GAAxB,IAA8BZ,OAAQA,IAA3BY,EAAKjB,aCqClBkB,MArDf,WACE,MAAwBZ,mBAAiB,IAAzC,mBAAOa,EAAP,KAAaC,EAAb,KACA,EAAkCd,oBAAS,GAA3C,mBAAkBe,GAAlB,WACA,EAA8Bf,oBAAS,GAAvC,mBAAgBgB,GAAhB,WAUMC,EAAY,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEAEjBJ,GAAa,GAFI,SAGMK,IAAMC,IAAIH,GAHhB,cAGXI,EAHW,gBAIGA,EAAST,KAJZ,OAIXJ,EAJW,OAKjBK,EAAQL,GALS,yDAOjBc,QAAQC,IAAI,qDAPK,UAQOC,KAAKC,UAAUC,GARtB,eAQXD,EARW,iBASID,KAAKG,MAAMF,GATf,QASXG,EATW,OAUjBf,EAAQe,GAORb,GAAW,GAjBM,yBAmBjBD,GAAa,GAnBI,6EAAH,sDAiClB,OAVAe,qBAAU,WACRb,EAvCQ,iDAwCP,IASD,+BACE,cAAC,EAAD,CAAOR,MAAOI,EAAMd,OA3CL,SAACL,GAClB,IAAMqC,EAAkBlB,EAAKmB,QAAO,SAACrB,GAAD,OAAUA,EAAKjB,KAAOA,KAC1DoB,EAAQiB,SCZZE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0165e075.chunk.js","sourcesContent":["import React, { FC, useState } from \"react\";\r\nimport {\r\n  IoIosArrowDropdownCircle,\r\n  IoIosArrowDropupCircle,\r\n} from \"react-icons/io\";\r\nimport { Tour as TourType } from \"./Tours\";\r\n\r\nexport const Tour: FC<TourType> = ({\r\n  id,\r\n  name,\r\n  info,\r\n  image,\r\n  price,\r\n  remove,\r\n}) => {\r\n  const [isShown, setIsShown] = useState(false);\r\n  return (\r\n    <article className=\"single-tour\">\r\n      <img src={image} alt={name} />\r\n      <footer>\r\n        <div className=\"tour-info\">\r\n          <h4>{name}</h4>\r\n          <h4 className=\"tour-price\">{price}</h4>\r\n        </div>\r\n        <p>{isShown ? info : info.substring(0, 150) + \"...\"}</p>\r\n        <div className=\"toggle\">\r\n          <button onClick={() => setIsShown(!isShown)}>\r\n            {isShown ? (\r\n              <IoIosArrowDropupCircle className=\"show-info\" />\r\n            ) : (\r\n              <IoIosArrowDropdownCircle className=\"show-info\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n        <button\r\n          className=\"delete-btn\"\r\n          onClick={() => {\r\n            remove(id);\r\n          }}>\r\n          Not interested\r\n        </button>\r\n      </footer>\r\n    </article>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { Tour } from \"./Tour\";\r\n\r\ninterface ToursProp {\r\n  tours: Tour[];\r\n  remove: (id: string) => void;\r\n}\r\n\r\nexport interface Tour {\r\n  id: string;\r\n  name: string;\r\n  info: string;\r\n  image: string;\r\n  price: number;\r\n  remove: (id: string) => void;\r\n}\r\n\r\nexport const Tours: FC<ToursProp> = ({ tours, remove }) => {\r\n  return (\r\n    <section>\r\n      <div className=\"title\">\r\n        <h2>Our tours</h2>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n      <div>\r\n        {tours.map((tour) => {\r\n          return <Tour key={tour.id} {...tour} remove={remove} />;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./Styles/App.css\";\nimport axios from \"axios\";\nimport dataJson from \"./data/data.json\";\nimport { Loading } from \"./Components/Loading\";\nimport { Error } from \"./Components/Error\";\nimport { Tours, Tour } from \"./Components/Tours\";\n\nconst url = \"https://course-api.com/react-tours-projects\";\n\nfunction App() {\n  const [data, setData] = useState<Tour[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const removeTour = (id: string): void => {\n    const newData: Tour[] = data.filter((tour) => tour.id !== id);\n    setData(newData);\n  };\n\n  // At the beginning it was fetching the data from API but as I was testing alot\n  // API wasn't responding very well thats why I moved it to local json file\n  // and in case of an error I just load the data from the json file.\n  const getData: any = async (url: string) => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(url);\n      const tours = await response.data;\n      setData(tours);\n    } catch (error) {\n      console.log(\"error, loading data from local storage instead...\");\n      const stringify = await JSON.stringify(dataJson);\n      const parsed = await JSON.parse(stringify);\n      setData(parsed);\n\n      // There was an error screen in case API wasn't responding properly\n      // but since I moved it to JSON file, there always be some data ready.\n      // setIsError(true);\n\n      //I am setting Error to false just to make sure there are no warnings in console\n      setIsError(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData(url);\n  }, []);\n\n  {\n    isError && <Error />;\n  }\n  {\n    isLoading && <Loading />;\n  }\n  return (\n    <main>\n      <Tours tours={data} remove={removeTour} />\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}